WindowManager:
    HomeWindow:
    MainWindow:
    SecondWindow:
    ProteinWindow:
    ExpressionWindow:
    WrongWindow:
    BacterialWindow:
    PurificationWindow:
    IonExchangeWindow:
    PostAnalysisWindow:
    Expression3Window:
    Expression4Window:
    BamhiWindow:
    StickyAmpicilinWindow:
    LastExpressionWindow:
    SECWindow:
    BackPurificationWindow:
    AffinityWindow:
    HydrophobicWindow:
    AffinityQuestionWindow:
    FinalWindow:
    AffinityQbWindow:
    AffinityQcWindow:
    AffinityQdWindow:
    AffinityQeWindow:

<HomeWindow>:
    name: "home"

    GridLayout:
        cols: 1
        size: root.width, root.height

        Label:
            text: "Welcome to Biochem 463L Bandersnatch\n Let's start with analysis of your protein. "

        Button:
            text: "Find out protein identity"
            on_release:
                app.root.current = "postanalysis"


<MainWindow>:
    name: "main"
    sequence: sequence

    GridLayout:
        cols:1
        size: root.width, root.height

        GridLayout:
            cols:2

            Label:
                text: "Paste the sequence from the FASTA file.\nInclude the header. "

            TextInput:
                id: sequence
                multinline: False

        Button:
            text:"Submit"
            on_release:
                root.btn()
                app.root.current = "second"

        Button:
            text: "Go back to home screen"
            on_release:
                app.root.current = "home"

<SecondWindow>:
    name: "second"
    inputfasta: inputfasta

    GridLayout:
        cols:1
        size: root.width, root.height

        Label:
            text: "We will use Basic Local Alignment Search Tool (BLAST) to find out the identity of this protein. \n Is the following sequence correct? \n\n BLAST search takes a couple of minutes."

        Label:
            id: inputfasta
            text: "The sequence you entered should appear here. If you don't see it, start over."

        Button:
            text: "I made an error, take me back."
            on_release:
                app.root.current = "main"
                root.manager.transition.direction = "right"

        Button:
            text: "Let's do this!"
            on_release:
                app.root.current = "protein"
                root.blastsearch()
                root.manager.transition.direction = "left"

<ProteinWindow>:
    name: "protein"
    protname: protname
    weight: weight

    GridLayout:
        cols:1
        size: root.width, root.height

        Label:
            text: "Your protein was identified!"

        Label:
            text: "Name of the species it came from is in square brackets [  ]"

        Label:
            id: protname
            text: "Something went wrong, try again!"

        Label:
            text: "Weight of this protein is:"

        Label:
            id: weight
            text: "The weight should appear here, something went wrong"

        Button:
            text: "Continue"
            on_release:
                app.root.current = "postanalysis"

<PostAnalysisWindow>:
    name: "postanalysis"

    GridLayout:
        cols: 1
        size: root.width, root.height

        Label:
            text: "Welcome to Biochem 463L Bandersnatch\n Let's start with analysis of your protein. "

        Button:
            text: "Change the analysed protein"
            on_release:
                app.root.current = "main"

        Button:
            text: "Learn about protein expression"
            on_release:
                app.root.current = "expression"

        Button:
            text: "Learn about protein purification"
            on_release:
                app.root.current = "purification"

<ExpressionWindow>:
    name: "expression"

    GridLayout:
        cols: 1
        size: root.width, root.height

        Label:
            text: "To study a protein, you need to have a sample.\nHow would you like to produce your protein?"

        Button:
            text: "Mammalian cell culture"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Order it on Amazon"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Bacterial cell culture"
            on_release:
                app.root.current = "bacterial"

        Button:
            text: "Order it on Fisher Scientific"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"

<BacterialWindow>:
    name: "bacterial"

    GridLayout:
        cols: 1

        Label:
            text: "You need a circular vector to express your protein in bacteria. \nIn this experiment, typically pET-3A vector is used."

        Button:
            text: "Show pET-3A vector"
            on_release:
                root.showpet()

        Button:
            text: "Continue to next question"
            on_release:
                app.root.current = "expression3"

        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"


<Expression3Window>:
    name: "expression3"

    GridLayout:
        cols: 1

        Label:
            text: "How do you incorporate a desired gene into the vector?"

        Button:
            text: "Heat shock"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Restriction enzymes"
            on_release:
                app.root.current = "expression4"

        Button:
            text: "Synthesize the vector from the bases in a correct sequence"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Mix the vectors and the DNA for 24h in acidic solution"
            on_release:
                app.root.current = "wrong"

<Expression4Window>:

    name: "expression4"

    GridLayout:
        cols: 2

        Label:
            text: "Which restriction enzyme would you use with this vector?"

        Button:
            text: "Show me the sequence of pET-3A"
            on_release:
                root.showpetseq()

        Button:
            text: "NdeI"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "BamHI"
            on_release:
                app.root.current = "bamhi"

        Button:
            text: "EcoRI"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "NcoI"
            on_release:
                app.root.current = "wrong"

<P>:
    Label:
        id: pet3aseq
        text: "this should not show"
        text_size: root.width, None
        size: self.texture_size

<BamhiWindow>:
    name: "bamhi"

    GridLayout:
        cols: 1

        Label:
            text: "Restriction enzymes produce either sticky or blunt ends.\nWhich ones do you think are desired for vector incorporation?"

        Button:
            text: "Show sticky and blunt ends example"
            on_release:
                root.showends()
        Button:
            text: "Blunt ends are more desirable"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Sticky ends are more desirable"
            on_release:
                app.root.current = "stickyampicilin"


<StickyAmpicilinWindow>:
    name: "stickyampicilin"

    GridLayout:
        cols: 1

        Label:
            text: "How do you determine if bacteria picked up the vector?"

        Button:
            text: "All bacteria always pick up the vector"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Various stains are used to verify that"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "The leftover vector concentration is quantified"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Vector contains antibiotic resistance genes, so only those bacteria survive"
            on_release:
                app.root.current = "lastexpression"

<LastExpressionWindow>:
    name: "lastexpression"

    GridLayout:
        cols: 1

        Label:
            text: "Correct! You are done with this module!"

        Button:
            text: "Continue to Purification Module"
            on_release:
                app.root.current = "purification"

        Button:
            text: "Go back Home"
            on_release:
                app.root.current = "postanalysis"
                root.manager.transition.direction = "right"

<PurificationWindow>:
    name: "purification"

    GridLayout:
        cols:2

        GridLayout:
            cols: 2

            Label:
                text: "Following methods are available:"

            Button:
                text: "1. Size-exclusion chromatography\n   (SEC)"
                on_release:
                    app.root.current = "sec"

            Button:
                text: "2. Ion-exchange chromatography\n   (IEX)"
                on_release:
                    app.root.current = "ionexchange"

            Button:
                text: "3. Hydrophobic interaction chromatography\n   (HIC)"
                on_release:
                    app.root.current = "hydrophobic"

            Button:
                text: "4. Affinity chromatography\n   (AC)"
                on_release:
                    app.root.current = "affinity"

            Button:
                text: "Go back to Home"
                on_release:
                    app.root.current = "postanalysis"
                    root.manager.transition.direction = "right"

<IonExchangeWindow>:
    name: "ionexchange"
    isoelectric: isoelectric

    GridLayout:
        cols: 1
        Label:
            text: "Ion-exchange chromatography is <explanation>."

        Label:
            id: isoelectric
            text: "You pI should be displayed here."

        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"

<SECWindow>:
    name: "sec"

    GridLayout:
        cols: 1
        Label:
            text: "In size- exclusion chromatography, molecules are separated based on their size\nas they pass through a resin packed column.\n\nChoose the correct statement below:"

        Button:
            text: "Show me how it works!"
            on_release:
                root.showSEC()

        Button:
            text: "Larger molecules are eluted faster, because they are heavier."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Larger molecules are eluted faster, because they don't get trapped in the resin pores."
            on_release:
                app.root.current = "backPurification"

        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"
                root.manager.transition.direction = "right"

<BackPurificationWindow>:
    name: "backPurification"

    GridLayout:
        cols: 1

        Label:
            text: "Correct! Proceed with the next technique."

        Button:
            text: "Go back to list of purification techniques"
            on_release:
                app.root.current = "purification"

        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"
                root.manager.transition.direction = "right"


<AffinityWindow>:
    name: "affinity"

    GridLayout:
        cols: 1
        Label:
            text: "Affinity chromatography utilizes reversible affinity interaction\nbetween target proteins and the stationary phase."

        Button:
            text: "Show me how it works!"
            on_release:
                root.showaffinity()

        Button:
            text: "Continue to next question"
            on_release:
                app.root.current = "AffinityQuestion"
        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"
                root.manager.transition.direction = "right"

<AffinityQuestionWindow>:
    name: "AffinityQuestion"

    GridLayout:
        cols: 1
        Label:
            text: "Is affinity chromatography applicable to all proteins?"

        Button:
            text: "Yes, there are no limitations."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "No, it has to be of a specific size."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Yes, but the proteins need to be derivatized after extraction."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "No, the his-tag needs to be added during the expression step."
            on_release:
                app.root.current = "AffinityQb"

<AffinityQbWindow>:
    name: "AffinityQb"

    GridLayout:
        cols:1

        Label:
            text: "How do you add his-tags to a protein?"

        Button:
            text: "You mix it with histidine in pH = 10 buffer"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "You can only use this method with proteins naturally containing histidine."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "You choose a circular vector that has his-tag sequence."
            on_release:
                app.root.current = "AffinityQc"

        Button:
            text: "You have to use mammalian expression system."
            on_release:
                app.root.current = "wrong"

<AffinityQcWindow>:
    name: "AffinityQc"

    GridLayout:
        cols: 1

        Label:
            text: "How do you remove the his-tags after chromatography?"

        Button:
            text: "You don't, they don't change much in the protein."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "You use thrombin cleavage kit."
            on_release:
                app.root.current = "AffinityQd"

        Button:
            text: "You use mercaptoethanol."
            on_release:
                app.root.current = "wrong"

        Button:
            text: "You use HindIII enzyme."
            on_release:
                app.root.current = "wrong"

<AffinityQdWindow>:
    name: "AffinityQd"

    GridLayout:
        cols: 1

        Label:
            text: "What column would you use in affinity chromatography of a protein with His-tag?"

        Button:
            text: "C18 column"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Silica hel column"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Nickel column"
            on_release:
                app.root.current = "AffinityQe"

        Button:
            text: "Desalting column"
            on_release:
                app.root.current = "wrong"

<AffinityQeWindow>:
    name: "AffinityQe"

    GridLayout:
        cols: 1

        Label:
            text: "To elute the recombinant protein imidazole is used.\nHow is it later separated from the protein"

        Button:
            text: "Show imidazole structure"
            on_release:
                root.showimidazole()

        Button:
            text: "Size exclusion chromatography"
            on_release:
                app.root.current = "final"

        Button:
            text: "Second run on nickel column"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "Extraction with water"
            on_release:
                app.root.current = "wrong"

        Button:
            text: "It evaporates"
            on_release:
                app.root.current = "wrong"

<HydrophobicWindow>:
    name: "hydrophobic"

    GridLayout:
        cols: 1
        Label:
            text: "Ion exchange chromatography is <explanation>."
        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"
                root.manager.transition.direction = "right"

<WrongWindow>:
    name: "wrong"

    GridLayout:
        cols: 1

        Label:
            text: "That's not correct."

        Button:
            text: "Try again!"
            on_release:
                app.root.current = "postanalysis"
                root.manager.transition.direction = "right"

<FinalWindow>:
    name: "final"

    GridLayout:
        cols: 1

        Label:
            text: "Correct!"

        Label:
            text: "Thank you! That's all we had for you."

        Button:
            text: "Go back to Home"
            on_release:
                app.root.current = "postanalysis"
